{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","completed","title","ClassNames","TodoList","todos","style","listStyleType","map","id","username","getUser","userId","usersFromServer","find","App","useState","setTitel","setUserId","newTodos","setNewTodos","titleHasError","setTitleHasError","userHasError","setUserHasError","action","method","onSubmit","e","preventDefault","newTodo","Math","max","actualTodos","addTodo","type","pattern","placeholder","value","onChange","target","disabled","elem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1739ed0c.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>{name}</a>\n  );\n};\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo ;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <>\n      <article className={ClassNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n        {user && <UserInfo user={user} />}\n      </article>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo [];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    <ul>\n      <li style={{ listStyleType: 'none' }}>\n        {todos.map(todo => (<TodoInfo key={todo.id} todo={todo} />))}\n      </li>\n    </ul>\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitel] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [newTodos, setNewTodos] = useState(todos);\n  const [titleHasError, setTitleHasError] = useState(false);\n  const [userHasError, setUserHasError] = useState(false);\n\n  const addTodo = () => {\n    if (userId && title) {\n      const newId = Math.max(...newTodos.map(todo => todo.id)) + 1;\n      const newTodo = {\n        id: newId,\n        userId,\n        completed: false,\n        title,\n        user: getUser(userId),\n      };\n\n      if (title === ' ') {\n        return;\n      }\n\n      setNewTodos((actualTodos) => ([...actualTodos, newTodo]));\n      setUserId(0);\n      setTitel('');\n      setUserHasError(false);\n      setTitleHasError(false);\n    }\n\n    if (!userId) {\n      setUserHasError(true);\n    }\n\n    if (!title) {\n      setTitleHasError(true);\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    addTodo();\n  };\n\n  const handleUserId = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserHasError(false);\n  };\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitel(e.target.value);\n    setTitleHasError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            pattern=\"^((?!\\s{2}).)*$\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {titleHasError && (\n            <span className=\"error\">Please enter a title</span>)}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(elem => (\n              <option\n                key={elem.id}\n                value={elem.id}\n              >\n                {elem.name}\n              </option>\n            ))}\n          </select>\n          {userHasError && (\n            <span className=\"error\">Please choose a user</span>)}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={newTodos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}